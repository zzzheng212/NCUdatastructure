#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define TABLE_SIZE 100
#define MAX_KEY_LENGTH 256
#define MAX_VALUE_LENGTH 256

typedef struct KeyValue {
    char *key;
    char *value;
    struct KeyValue *next;
} KeyValue;

KeyValue *hashTable[TABLE_SIZE];

// 簡單哈希函數
unsigned int hash(const char *key) {
    unsigned int hash = 0;
    while (*key) {
        hash = (hash << 5) + *key++;
    }
    return hash % TABLE_SIZE;
}

// 插入鍵-值對
void put(const char *key, const char *value) {
    unsigned int index = hash(key);
    KeyValue *newEntry = malloc(sizeof(KeyValue));
    newEntry->key = strdup(key);
    newEntry->value = strdup(value);
    newEntry->next = hashTable[index];
    hashTable[index] = newEntry;
}

// 根據鍵查詢值
const char* get(const char *key) {
    unsigned int index = hash(key);
    KeyValue *entry = hashTable[index];
    while (entry != NULL) {
        if (strcmp(entry->key, key) == 0) {
            return entry->value;
        }
        entry = entry->next;
    }
    return NULL;
}

int main() {
    char key[MAX_KEY_LENGTH];
    char value[MAX_VALUE_LENGTH];
    int choice;

    while (1) {
        printf("1. 插入鍵-值對\n");
        printf("2. 查詢鍵的值\n");
        printf("3. 退出\n");
        printf("請選擇操作: ");
        scanf("%d", &choice);
        getchar();  // 清除緩衝區中的換行符

        if (choice == 1) {
            // 插入鍵-值對
            printf("請輸入鍵: ");
            fgets(key, MAX_KEY_LENGTH, stdin);
            key[strcspn(key, "\n")] = 0;  // 去掉換行符

            printf("請輸入值: ");
            fgets(value, MAX_VALUE_LENGTH, stdin);
            value[strcspn(value, "\n")] = 0;  // 去掉換行符

            put(key, value);
            printf("鍵-值對已插入!\n");

        } else if (choice == 2) {
            // 查詢鍵的值
            printf("請輸入要查詢的鍵: ");
            fgets(key, MAX_KEY_LENGTH, stdin);
            key[strcspn(key, "\n")] = 0;  // 去掉換行符

            const char *result = get(key);
            if (result) {
                printf("鍵 '%s' 的值為: %s\n", key, result);
            } else {
                printf("鍵 '%s' 未找到!\n", key);
            }

        } else if (choice == 3) {
            printf("退出程式.\n");
            break;
        } else {
            printf("無效的選擇，請重新輸入.\n");
        }
    }

    return 0;
}
